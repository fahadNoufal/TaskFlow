// darkMode:
const darkMode= useSelector((state)=>(state.darkMode.darkMode))

  useEffect(()=>{
    darkMode?activateDark():diactivateDark()
  },[darkMode])
  function activateDark() {
    darkTl.current.reverse()
  }
  function diactivateDark() {
    darkTl.current.play()
  }
  let darkTl=useRef(null)
  
  darkTl.current=gsap.timeline({paused:true})

  useEffect(()=>{

    darkTl.current.to('.page-wrapper',{
    background:'linear-gradient(#FFFBC1,#DBA39A)',
    color:'black',
    // duration:1,
    })
    darkTl.current.to('#task-screen',{
      background:'linear-gradient(#F7CCAC,#56b4bb)',
      // duration:1,
    },'<')
    darkTl.current.to('.menu-container',{
      background:' linear-gradient(to right, #46C2CB,#F7CCAC)',
      // duration:1,
    },'<')
    darkTl.current.to('.nav-icon-container',{
      color:'#FFFFFF',
    },'<')
    darkTl.current.to('.task-stats',{
      backgroundColor:'transparent',
      boxShadow:'0px 5px 20px rgba(0, 0, 0, 0.19)',
    },'<')
    darkTl.current.to('.item-container',{
      backgroundColor:' #E6DDC4'
    },'<')
    darkTl.current.to('.add-task-btn',{
      backgroundColor:'#7F669D',
      color:'#FFFFFF'
    },'<')
  },[])

  useEffect(() => {
    if (darkTl.current) {
      darkMode ? darkTl.current.play() : darkTl.current.reverse();
    }
  }, [darkMode]);
